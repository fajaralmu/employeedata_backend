<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	  http://www.springframework.org/schema/mvc/spring-mvc.xsd
	  http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
 	<jpa:repositories base-package="com.fajar.employeedata.dao" />   
	<context:annotation-config></context:annotation-config>
	<mvc:annotation-driven
		enable-matrix-variables="true" />
	<mvc:resources location="/resources/" mapping="/res/**"></mvc:resources>
	

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean> 

	 <bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory"></property>
	</bean>
 
	  <bean id="dataSource_postgres"
		 class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="org.postgresql.Driver" />
		<property name="url"
			value="jdbc:postgresql://ec2-3-214-136-47.compute-1.amazonaws.com:5432/d9tc7sot20ubr1" />
		<property name="username" value="mtffegediqgxpz" />
		<property name="password" value="4c04ad78927550b795a52608cc9491ca6e686f0290b8ec9963144baecc9b3651" />
	</bean> 
<!-- 	  <bean id="dataSource_postgres"
		 class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="org.postgresql.Driver" />
		<property name="url"
			value="jdbc:postgresql://localhost:5432/employeedata" />
		<property name="username" value="postgres" />
		<property name="password" value="root" />
	</bean>  -->
	 
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.fajar.employeedata*" />
		<property name="dataSource" ref="dataSource_postgres" /><!-- <property 
			name="sessionFactory" ref="sessionFactory"></property> -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				 <prop key="hibernate.hbm2ddl.auto">update</prop>  
				 <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop> 
				<prop key="hibernate.current_session_context_class">org.hibernate.context.internal.ThreadLocalSessionContext
				</prop>
			</props>
		</property>
		<property name="persistenceProvider"
			ref="persistenceProvider">
			<!-- <bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean> -->
		</property>
	</bean>

	<bean id="persistenceProvider" 	class="org.hibernate.jpa.HibernatePersistenceProvider" />

	<bean id="objectMapper" 		class="com.fasterxml.jackson.databind.ObjectMapper" />
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>

	</bean>
	 
 
</beans>